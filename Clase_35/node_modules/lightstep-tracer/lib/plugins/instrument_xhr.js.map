{"version":3,"sources":["../../src/plugins/instrument_xhr.js"],"names":[],"mappings":"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","file":"instrument_xhr.js","sourcesContent":["import * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxied = {};\nif (typeof window === 'object' && typeof window.XMLHttpRequest !== 'undefined') {\n    proxied = {\n        XMLHttpRequest   : XMLHttpRequest,\n        open             : XMLHttpRequest.prototype.open,\n        send             : XMLHttpRequest.prototype.send,\n        setRequestHeader : XMLHttpRequest.prototype.setRequestHeader,\n    };\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(xhr) {\n    let raw = xhr.getAllResponseHeaders();\n    let parts = raw.replace(/\\s+$/, '').split(/\\n/);\n    for (let i = 0; i < parts.length; i++) {\n        parts[i] = parts[i].replace(/\\r/g, '').replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n    return parts;\n}\n\n// Automatically create spans for all XMLHttpRequest objects.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentXHR {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n    }\n\n    name() {\n        return 'instrument_xhr';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('xhr_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('xhr_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('xhr_url_header_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_header_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('include_cookies', { type : 'bool', defaultValue : true });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        let proto = proxied.XMLHttpRequest.prototype;\n        proto.open = proxied.open;\n        proto.send = proxied.send;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied XHR calls unless disabled\n        if (!this._proxyInited && current.xhr_instrumentation) {\n            this._proxyInited = true;\n            let proto = proxied.XMLHttpRequest.prototype;\n            proto.setRequestHeader = this._instrumentSetRequestHeader();\n            proto.open = this._instrumentOpen();\n            proto.send = this._instrumentSend();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of XHRs to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.XMLHttpRequest) {\n            return false;\n        }\n        if (!window.XMLHttpRequest.prototype) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentSetRequestHeader() {\n        return function (header, value) {\n            this.__requestHeaders = this.__requestHeaders || {};\n            this.__requestHeaders[header] = value;\n            return proxied.setRequestHeader.apply(this, arguments);\n        };\n    }\n\n    _instrumentOpen() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (method, url, asyncArg, user, password) {\n            if (!self._shouldTrace(tracer, this, url)) {\n                return proxied.open.apply(this, arguments);\n            }\n            const opts = tracer.options();\n\n            let span = tracer.startSpan('XMLHttpRequest');\n            tracer.addActiveRootSpan(span);\n            this.__tracer_span = span;\n            this.__tracer_url = url;\n\n            let tags = {\n                method : method,\n                url    : url,\n                async  : asyncArg,\n                user   : user,\n            };\n            if (url) {\n                // eslint-disable-next-line prefer-destructuring\n                tags.url_pathname = url.split('?')[0];\n            }\n\n            let openPayload = { ...tags };\n            if (opts.include_cookies) {\n                openPayload.cookies = getCookies();\n            }\n\n            // Note: async defaults to true\n            let async = (asyncArg === undefined ? true : asyncArg);\n            if (async) {\n                this.addEventListener('readystatechange', function () {\n                    if (this.readyState === 0) {\n                        span.log({\n                            readyState : 0,\n                            event      : 'unsent',\n                        });\n                    } else if (this.readyState === 1) {\n                        span.log({\n                            readyState : 1,\n                            event      : 'sending',\n                        });\n                    } else if (this.readyState === 2) {\n                        span.log({\n                            readyState  : 2,\n                            event       : 'headers received',\n                            method      : method,\n                            url         : url,\n                            openPayload : openPayload,\n                            headers     : getResponseHeaders(this),\n                        });\n                        span.addTags(tags);\n                    } else if (this.readyState === 3) {\n                        span.log({\n                            readyState : 3,\n                            event      : 'loading',\n                        });\n                    } else if (this.readyState === 4) {\n                        let { responseType } = this;\n                        span.log({\n                            readyState   : 4,\n                            url          : url,\n                            method       : method,\n                            headers      : getResponseHeaders(this),\n                            status       : this.status,\n                            statusText   : this.statusText,\n                            responseType : responseType,\n                        });\n                        tracer.removeActiveRootSpan(span);\n                        span.finish();\n                    } else {\n                        span.log({\n                            readyState : this.readyState,\n                        });\n                    }\n                });\n            }\n\n            let result = proxied.open.apply(this, arguments);\n            if (!async) {\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n            }\n            return result;\n        };\n    }\n\n    _instrumentSend() {\n        let self = this;\n        let tracer = this._tracer;\n        return function () {\n            if (!self._shouldTrace(tracer, this, this.__tracer_url)) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let span = this.__tracer_span;\n            if (!span) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let data = Array.prototype.slice.call(arguments);\n            let len;\n            if (data.length === 1) {\n                if (data[0] && data[0].length) {\n                    len = data[0].length;\n                }\n                try {\n                    data = JSON.parse(data[0]);\n                } catch (e) {\n                    // Ignore the error\n                }\n            }\n            let lenStr = (len === undefined) ? '' : `, data length=${len}`;\n            span.log({\n                event       : 'send',\n                data_length : lenStr,\n            });\n\n            // Add Open-Tracing headers\n            if (self._shouldAddHeadersToRequest(tracer, this.__tracer_url)) {\n                const headersCarrier = {};\n                tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n                const keys = Object.keys(headersCarrier);\n                keys.forEach((key) => {\n                    proxied.setRequestHeader.call(this, key, headersCarrier[key]);\n                });\n            }\n\n            return proxied.send.apply(this, arguments);\n        };\n    }\n\n    _shouldTrace(tracer, xhr, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (this._internalExclusions.some((ex) => ex.test(url))) {\n            return false;\n        }\n\n        if (opts.xhr_url_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.xhr_url_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n\n    _shouldAddHeadersToRequest(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (opts.xhr_url_header_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.xhr_url_header_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n}\n\nmodule.exports = new InstrumentXHR();\n"]}