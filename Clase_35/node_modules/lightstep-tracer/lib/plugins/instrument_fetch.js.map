{"version":3,"sources":["../../src/plugins/instrument_fetch.js"],"names":[],"mappings":"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","file":"instrument_fetch.js","sourcesContent":["import * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxiedFetch;\nif (typeof window === 'object' && typeof window.fetch !== 'undefined') {\n    proxiedFetch = window.fetch;\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(response) {\n    const result = {};\n    const entries = response.headers.entries();\n    for (let i = 0; i < entries.length; i++) {\n        const pair = entries[i];\n        const [key, val] = pair;\n        result[key] = val;\n    }\n    return result;\n}\n\n// Automatically create spans for all requests made via window.fetch.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentFetch {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n    }\n\n    name() {\n        return 'instrument_fetch';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('fetch_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('fetch_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('fetch_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('fetch_url_header_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('fetch_url_header_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('include_cookies', { type : 'bool', defaultValue : true });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        window.fetch = proxiedFetch;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied fetch calls unless disabled\n        if (!this._proxyInited && current.fetch_instrumentation) {\n            this._proxyInited = true;\n            window.fetch = this._instrumentFetch();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of fetch to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.fetch) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentFetch() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (input, init) {\n            const request = new Request(input, init);\n            const opts = tracer.options();\n\n            if (!self._shouldTrace(tracer, request.url)) {\n                // eslint-disable-next-line prefer-spread\n                return proxiedFetch(request);\n            }\n\n            let span = tracer.startSpan('fetch');\n            tracer.addActiveRootSpan(span);\n\n            const parsed = new URL(request.url);\n            let tags = {\n                method : request.method,\n                url    : request.url,\n\n                // NOTE: Purposefully excluding username:password from tags.\n                // TODO: consider sanitizing URL to mask / remove that information from the trace in general\n                hash     : parsed.hash,\n                href     : parsed.href,\n                protocol : parsed.protocol,\n                origin   : parsed.origin,\n                host     : parsed.host,\n                hostname : parsed.hostname,\n                port     : parsed.port,\n                pathname : parsed.pathname,\n                search   : parsed.search,\n            };\n            if (opts.include_cookies) {\n                tags.cookies = getCookies();\n            }\n\n            // Add Open-Tracing headers\n            if (self._shouldAddHeadersToRequest(tracer, request.url)) {\n                const headersCarrier = {};\n                tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n                Object.keys(headersCarrier).forEach((key) => {\n                    if (!request.headers.get(key)) request.headers.set(key, headersCarrier[key]);\n                });\n            }\n            span.log({\n                event       : 'sending',\n                method      : request.method,\n                url         : request.url,\n                openPayload : tags,\n            });\n            span.addTags(tags);\n\n            return proxiedFetch(request).then((response) => {\n                if (!response.ok) {\n                    span.addTags({ error : true });\n                }\n                span.log({\n                    method       : request.method,\n                    headers      : getResponseHeaders(response),\n                    status       : response.status,\n                    statusText   : response.statusText,\n                    responseType : response.type,\n                    url          : response.url,\n                });\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n                return response;\n            }).catch((e) => {\n                span.addTags({ error : true });\n                tracer.removeActiveRootSpan(span);\n                span.log({\n                    event : 'error',\n                    error : e,\n                });\n                span.finish();\n                throw e;\n            });\n        };\n    }\n\n    _shouldTrace(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (this._internalExclusions.some((ex) => ex.test(url))) {\n            return false;\n        }\n\n        if (opts.fetch_url_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.fetch_url_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n\n    _shouldAddHeadersToRequest(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (opts.fetch_url_header_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.fetch_url_header_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n}\n\nmodule.exports = new InstrumentFetch();\n"]}