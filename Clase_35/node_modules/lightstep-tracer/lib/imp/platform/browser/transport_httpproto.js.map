{"version":3,"sources":["../../../../src/imp/platform/browser/transport_httpproto.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,QAAQ,QAAQ,uCAAR,CAAZ;;IAEqB,gB;AACjB,aADiB,gBACjB,GAAc;AAAA,8BADG,gBACH;;AACV,aAAK,KAAL,GAAa,EAAb;AACA,aAAK,KAAL,GAAa,CAAb;AACA,aAAK,KAAL,GAAa,EAAb;AACA,aAAK,WAAL,GAAmB,EAAnB;AACH;;iBANgB,gB;;yCAQA,I,EAAM;AACnB,iBAAK,KAAL,GAAa,KAAK,cAAlB;AACA,iBAAK,KAAL,GAAa,KAAK,cAAlB;AACA,iBAAK,KAAL,GAAa,KAAK,cAAlB;AACA,iBAAK,WAAL,GAAmB,KAAK,oBAAxB;AACH;;;+BAEM,Q,EAAU,I,EAAM,O,EAAQ,I,EAAM;AACjC,gBAAI;AACA,oBAAI,CAAC,QAAL,EAAe;AACX,yBAAK,WAAL,CAAiB,IAAjB,EAAuB,OAAvB,EAA+B,IAA/B;AACH;AACJ,aAJD,CAIE,OAAO,CAAP,EAAU;AACR,uBAAO,KAAK,CAAL,EAAQ,IAAR,CAAP;AACH;AACJ;;;oCAEW,I,EAAM,M,EAAQ,I,EAAM;AAC5B,gBAAI,cAAc,OAAO,OAAP,CAAe,IAAf,CAAlB;AACA,gBAAI,WAAY,KAAK,WAAL,KAAqB,MAAtB,GAAgC,MAAhC,GAAyC,OAAxD;AACA,gBAAI,MAAS,QAAT,WAAuB,KAAK,KAA5B,SAAqC,KAAK,KAA1C,GAAkD,KAAK,KAAvD,oBAAJ;AACA,gBAAI,MAAM,IAAI,cAAJ,EAAV;AACA,gBAAI,YAAJ,GAAmB,aAAnB;AACA,gBAAI,IAAJ,CAAS,MAAT,EAAiB,GAAjB;AACA;AACA;AACA,gBAAI,gBAAJ,CAAqB,QAArB,EAA+B,0BAA/B;AACA,gBAAI,gBAAJ,CAAqB,cAArB,EAAqC,0BAArC;AACA,gBAAI,kBAAJ,GAAyB,YAAY;AACjC,oBAAI,KAAK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,wBAAI,MAAM,IAAV;AACA,wBAAI,OAAO,IAAX;AACA,wBAAI,KAAK,MAAL,KAAgB,GAApB,EAAyB;AACrB,8BAAM,IAAI,KAAJ,oBAA2B,KAAK,MAAhC,CAAN;AACH,qBAFD,MAEO,IAAI,CAAC,KAAK,QAAV,EAAoB;AACvB,8BAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACH,qBAFM,MAEA;AACH,4BAAI;AACA,mCAAO,MAAM,cAAN,CAAqB,iBAArB,CAAuC,KAAK,QAA5C,EAAsD,QAAtD,EAAP;AACH,yBAFD,CAEE,OAAO,SAAP,EAAkB;AAChB,kCAAM,SAAN;AACH;AACJ;AACD,2BAAO,KAAK,GAAL,EAAU,IAAV,CAAP;AACH;AACJ,aAjBD;AAkBA,gBAAI,aAAa,YAAY,eAAZ,EAAjB;AACA,gBAAI,IAAJ,CAAS,UAAT;AACH;;;WAxDgB,gB;;;kBAAA,gB","file":"transport_httpproto.js","sourcesContent":["let proto = require('../../generated_proto/collector_pb.js');\n\nexport default class TransportBrowser {\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let reportProto = report.toProto(auth);\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v2/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.responseType = 'arraybuffer';\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('Accept', 'application/octet-stream');\n        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.response) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = proto.ReportResponse.deserializeBinary(this.response).toObject();\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, resp);\n            }\n        };\n        let serialized = reportProto.serializeBinary();\n        xhr.send(serialized);\n    }\n}\n"]}