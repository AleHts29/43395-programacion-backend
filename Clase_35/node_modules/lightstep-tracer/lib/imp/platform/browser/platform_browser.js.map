{"version":3,"sources":["../../../../src/imp/platform/browser/platform_browser.js"],"names":[],"mappings":"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","file":"platform_browser.js","sourcesContent":["const optionsParser = require('./options_parser.js');\nconst util = require('./util');\n\nconst kRuntimeGUIDCookiePrefix = 'lightstep_guid';\nconst kSessionIDCookieKey = 'lightstep_session_id';\nconst kCookieTimeToLiveSeconds = 7 * 24 * 60 * 60;\n\nlet nowMicrosImp = (function () {\n    // Is a hi-res timer available?\n    if (window.performance\n        && window.performance.now\n        && window.performance.timing\n        && window.performance.timing.navigationStart) {\n        let start = performance.timing.navigationStart;\n        return function () {\n            return Math.floor((start + performance.now()) * 1000.0);\n        };\n    }\n    // The low-res timer is the best we can do\n    return function () {\n        return Date.now() * 1000.0;\n    };\n}());\n\nclass PlatformBrowser {\n    name() {\n        return 'browser';\n    }\n\n    nowMicros() {\n        return nowMicrosImp();\n    }\n\n    // Return the GUID to use for the runtime. The intention is to reuse the\n    // GUID so that logically a single browser session looks like a single\n    // runtime.\n    runtimeGUID(groupName) {\n        // Account for the groupName in the same that multiple apps or services\n        // are running on the same domain (and should not share the same\n        // runtime GUID).\n        let cookieKey = encodeURIComponent(`${kRuntimeGUIDCookiePrefix}/${groupName}`);\n        let uuid = util.cookie(cookieKey) || this._generateLongUUID();\n        util.cookie(cookieKey, uuid, kCookieTimeToLiveSeconds, '/');\n\n        // Also create a session ID as well to give the server more information\n        // to coordinate with.\n        let sessionID = util.cookie(kSessionIDCookieKey) || this._generateLongUUID();\n        util.cookie(kSessionIDCookieKey, sessionID, kCookieTimeToLiveSeconds, '/');\n\n        return uuid;\n    }\n\n    generateUUID() {\n        return this._generateLongUUID();\n    }\n\n    _generateLongUUID() {\n        /* eslint-disable no-bitwise */\n        let p0 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        let p1 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        return `${p0}${p1}`;\n        /* eslint-enable no-bitwise */\n    }\n\n    onBeforeExit(...args) {\n        // This will result in the final report not being made in non-browser\n        // environments like React Native. Flush should be called explicitly in\n        // those environments\n        if (util.isBrowser()) {\n            window.addEventListener('beforeunload', ...args);\n        }\n    }\n\n    plugins(opts) {\n        return [\n            require('../../../plugins/instrument_xhr'),\n            require('../../../plugins/instrument_fetch'),\n            require('../../../plugins/instrument_document_load'),\n        ];\n    }\n\n    options(imp) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n        optionsParser.parseURLQueryOptions(tracerOpts, browserOpts);\n        return tracerOpts;\n    }\n\n    static initLibrary(lib) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n\n        if (browserOpts.init_global_tracer) {\n            PlatformBrowser.initGlobalTracer(lib, tracerOpts);\n        }\n    }\n\n    static initGlobalTracer(lib, opts) {\n        if (typeof window !== 'object') {\n            return;\n        }\n        if (typeof window.opentracing !== 'object') {\n            return;\n        }\n        opentracing.initGlobalTracer(new lib.Tracer(opts)); // eslint-disable-line no-undef\n    }\n\n    tracerTags() {\n        return {\n            'lightstep.tracer_platform' : 'browser',\n        };\n    }\n\n    // There's no way to truly \"fatal\" on the browser; the best approximation\n    // is an Error exception.\n    fatal(message) {\n        throw new Error(message);\n    }\n\n    localStoreGet(key) {\n        try {\n            if (!window.sessionStorage) {\n                return null;\n            }\n        } catch (_ignored) {\n            // Accessing `sessionStorage` or `localStorage` in an `<iframe>` in Chrome throws when\n            // the user setting \"block third-party cookies and site data\" is turned on.\n            //\n            // eslint-disable-next-line max-len\n            // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n            return null;\n        }\n        try {\n            return JSON.parse(sessionStorage.getItem(`lightstep/${key}`));\n        } catch (_ignored) {\n            return null;\n        }\n    }\n\n    localStoreSet(key, value) {\n        try {\n            if (!window.sessionStorage) {\n                return;\n            }\n        } catch (_ignored) {\n            // (See comment above)\n            return;\n        }\n        try {\n            sessionStorage.setItem(`lightstep/${key}`, JSON.stringify(value));\n        } catch (_ignored) { /* Ignored */ }\n    }\n}\n\nmodule.exports = PlatformBrowser;\n"]}