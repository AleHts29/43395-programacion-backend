{"version":3,"sources":["../../src/imp/runtime_imp.js"],"names":[],"mappings":";;;;;;qjBAAgE;AAClC;;;AAD9B;;AACA;;;;AACA;;IAAY,M;;AACZ;;;;;;;;;;AAEA,IAAI,QAAQ,QAAQ,gCAAR,CAAZ;AACA,IAAM,gBAAgB,QAAQ,oBAAR,CAAtB;;IAEqB,U;AACjB,aADiB,UACjB,CAAY,WAAZ,EAAyB,WAAzB,EAAsC,aAAtC,EAAqD,UAArD,EAAiE;AAAA,8BADhD,UACgD;;AAC7D,aAAK,YAAL,GAAoB,WAApB;AACA,aAAK,YAAL,GAAoB,WAApB;AACA,aAAK,cAAL,GAAsB,aAAtB;AACA,aAAK,WAAL,GAAmB,UAAnB;AACH;;iBANgB,U;;mCAQN;AACP,gBAAI,cAAc,EAAlB;AACA,gCAAM,KAAK,WAAX,EAAwB,UAAC,GAAD,EAAM,GAAN,EAAc;AAClC,4BAAY,IAAZ,CAAiB,IAAI,2CAAe,QAAnB,CAA4B;AACzC,yBAAQ,OAAO,QAAP,CAAgB,GAAhB,CADiC;AAEzC,2BAAQ,OAAO,QAAP,CAAgB,GAAhB;AAFiC,iBAA5B,CAAjB;AAIH,aALD;;AAOA;AACA;AACA,mBAAO,IAAI,2CAAe,OAAnB,CAA2B;AAC9B,sBAAe,KAAK,YADU;AAE9B,8BAAe,KAAK,YAFU;AAG9B,4BAAe,KAAK,cAHU;AAI9B,uBAAe;AAJe,aAA3B,CAAP;AAMH;;;kCAES;AACN,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,MAAd,CAAqB,0BAArB;AACA,0BAAc,cAAd,CAA6B,cAAc,OAA3C;;AAEA,gBAAI,iBAAiB,IAAI,MAAM,QAAV,EAArB;AACA,2BAAe,MAAf,CAAsB,2BAAtB;AACA,2BAAe,cAAf,CAA8B,KAAK,WAAL,CAAiB,2BAAjB,CAA9B;;AAEA,gBAAI,wBAAwB,IAAI,MAAM,QAAV,EAA5B;AACA,kCAAsB,MAAtB,CAA6B,mCAA7B;AACA,kCAAsB,cAAtB,CAAqC,KAAK,WAAL,CAAiB,mCAAjB,CAArC;;AAEA,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,MAAd,CAAqB,0BAArB;AACA,0BAAc,cAAd,CAA6B,KAAK,cAAlC;;AAEA,gBAAI,cAAc,IAAI,MAAM,QAAV,EAAlB;AACA,wBAAY,MAAZ,CAAmB,wBAAnB;AACA,wBAAY,cAAZ,CAA2B,KAAK,WAAL,CAAiB,wBAAjB,CAA3B;;AAEA,gBAAI,WAAW,IAAI,MAAM,QAAV,EAAf;AACA,qBAAS,MAAT,CAAgB,oBAAhB;AACA,qBAAS,cAAT,CAAwB,KAAK,WAAL,CAAiB,oBAAjB,CAAxB;;AAEA,gBAAI,aAAa,eAAK,QAAL,CAAc,KAAK,YAAnB,CAAjB;;AAEA,gBAAI,aAAa,EAAjB;AACA,gCAAM,KAAK,WAAX,EAAwB,UAAC,GAAD,EAAM,GAAN,EAAc;AAClC,oBAAI,OAAO,IAAI,MAAM,QAAV,EAAX;AACA,qBAAK,MAAL,CAAY,GAAZ;AACA,qBAAK,cAAL,CAAoB,GAApB;AACA,2BAAW,IAAX,CAAgB,IAAhB;AACH,aALD;;AAOA,gBAAI,eAAe,CAAC,aAAD,EAAgB,cAAhB,EAAgC,aAAhC,EAA+C,WAA/C,EAA4D,QAA5D,EAAsE,qBAAtE,CAAnB;AACA,gBAAI,UAAU,aAAa,MAAb,CAAoB,UAApB,CAAd;;AAEA,gBAAI,gBAAgB,IAAI,MAAM,QAAV,EAApB;AACA,0BAAc,aAAd,CAA4B,UAA5B;AACA,0BAAc,WAAd,CAA0B,OAA1B;;AAEA,mBAAO,aAAP;AACH;;;WAtEgB,U;;;kBAAA,U","file":"runtime_imp.js","sourcesContent":["import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce';\nimport util from './util/util';\n\nlet proto = require('./generated_proto/collector_pb');\nconst packageObject = require('../../package.json');\n\nexport default class RuntimeImp {\n    constructor(runtimeGUID, startMicros, componentName, attributes) {\n        this._runtimeGUID = runtimeGUID;\n        this._startMicros = startMicros;\n        this._componentName = componentName;\n        this._attributes = attributes;\n    }\n\n    toThrift() {\n        let thriftAttrs = [];\n        _each(this._attributes, (val, key) => {\n            thriftAttrs.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(val),\n            }));\n        });\n\n        // NOTE: for legacy reasons, the Thrift field is called \"group_name\"\n        // but is semantically equivalent to the \"component_name\"\n        return new crouton_thrift.Runtime({\n            guid         : this._runtimeGUID,\n            start_micros : this._startMicros,\n            group_name   : this._componentName,\n            attrs        : thriftAttrs,\n        });\n    }\n\n    toProto() {\n        let tracerVersion = new proto.KeyValue();\n        tracerVersion.setKey('lightstep.tracer_version');\n        tracerVersion.setStringValue(packageObject.version);\n\n        let tracerPlatform = new proto.KeyValue();\n        tracerPlatform.setKey('lightstep.tracer_platform');\n        tracerPlatform.setStringValue(this._attributes['lightstep.tracer_platform']);\n\n        let tracerPlatformVersion = new proto.KeyValue();\n        tracerPlatformVersion.setKey('lightstep.tracer_platform_version');\n        tracerPlatformVersion.setStringValue(this._attributes['lightstep.tracer_platform_version']);\n\n        let componentName = new proto.KeyValue();\n        componentName.setKey('lightstep.component_name');\n        componentName.setStringValue(this._componentName);\n\n        let commandLine = new proto.KeyValue();\n        commandLine.setKey('lightstep.command_line');\n        commandLine.setStringValue(this._attributes['lightstep.command_line']);\n\n        let hostname = new proto.KeyValue();\n        hostname.setKey('lightstep.hostname');\n        hostname.setStringValue(this._attributes['lightstep.hostname']);\n\n        let reporterId = util.hexToDec(this._runtimeGUID);\n\n        let tracerTags = [];\n        _each(this._attributes, (val, key) => {\n            let ttag = new proto.KeyValue();\n            ttag.setKey(key);\n            ttag.setStringValue(val);\n            tracerTags.push(ttag);\n        });\n\n        let reporterTags = [tracerVersion, tracerPlatform, componentName, commandLine, hostname, tracerPlatformVersion];\n        let allTags = reporterTags.concat(tracerTags);\n\n        let reporterProto = new proto.Reporter();\n        reporterProto.setReporterId(reporterId);\n        reporterProto.setTagsList(allTags);\n\n        return reporterProto;\n    }\n}\n"]}